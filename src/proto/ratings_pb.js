/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.exportSymbol('proto.statistico.Points', null, global);
goog.exportSymbol('proto.statistico.TeamRating', null, global);
goog.exportSymbol('proto.statistico.TeamRatingRequest', null, global);
goog.exportSymbol('proto.statistico.TeamRatingResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statistico.TeamRatingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statistico.TeamRatingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statistico.TeamRatingRequest.displayName = 'proto.statistico.TeamRatingRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statistico.TeamRatingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.statistico.TeamRatingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statistico.TeamRatingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.TeamRatingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    seasonId: (f = msg.getSeasonId()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    dateBefore: (f = msg.getDateBefore()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    sort: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statistico.TeamRatingRequest}
 */
proto.statistico.TeamRatingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statistico.TeamRatingRequest;
  return proto.statistico.TeamRatingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statistico.TeamRatingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statistico.TeamRatingRequest}
 */
proto.statistico.TeamRatingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTeamId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setSeasonId(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setDateBefore(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statistico.TeamRatingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statistico.TeamRatingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statistico.TeamRatingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.TeamRatingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSeasonId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getDateBefore();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 team_id = 1;
 * @return {number}
 */
proto.statistico.TeamRatingRequest.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.statistico.TeamRatingRequest.prototype.setTeamId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.UInt64Value season_id = 2;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.statistico.TeamRatingRequest.prototype.getSeasonId = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 2));
};


/** @param {?proto.google.protobuf.UInt64Value|undefined} value */
proto.statistico.TeamRatingRequest.prototype.setSeasonId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.statistico.TeamRatingRequest.prototype.clearSeasonId = function() {
  this.setSeasonId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.TeamRatingRequest.prototype.hasSeasonId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue date_before = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.statistico.TeamRatingRequest.prototype.getDateBefore = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.statistico.TeamRatingRequest.prototype.setDateBefore = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.statistico.TeamRatingRequest.prototype.clearDateBefore = function() {
  this.setDateBefore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.TeamRatingRequest.prototype.hasDateBefore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string sort = 4;
 * @return {string}
 */
proto.statistico.TeamRatingRequest.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.statistico.TeamRatingRequest.prototype.setSort = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statistico.TeamRatingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.statistico.TeamRatingResponse.repeatedFields_, null);
};
goog.inherits(proto.statistico.TeamRatingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statistico.TeamRatingResponse.displayName = 'proto.statistico.TeamRatingResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.statistico.TeamRatingResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statistico.TeamRatingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.statistico.TeamRatingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statistico.TeamRatingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.TeamRatingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ratingsList: jspb.Message.toObjectList(msg.getRatingsList(),
    proto.statistico.TeamRating.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statistico.TeamRatingResponse}
 */
proto.statistico.TeamRatingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statistico.TeamRatingResponse;
  return proto.statistico.TeamRatingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statistico.TeamRatingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statistico.TeamRatingResponse}
 */
proto.statistico.TeamRatingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.statistico.TeamRating;
      reader.readMessage(value,proto.statistico.TeamRating.deserializeBinaryFromReader);
      msg.addRatings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statistico.TeamRatingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statistico.TeamRatingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statistico.TeamRatingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.TeamRatingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRatingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.statistico.TeamRating.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TeamRating ratings = 1;
 * @return {!Array<!proto.statistico.TeamRating>}
 */
proto.statistico.TeamRatingResponse.prototype.getRatingsList = function() {
  return /** @type{!Array<!proto.statistico.TeamRating>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.statistico.TeamRating, 1));
};


/** @param {!Array<!proto.statistico.TeamRating>} value */
proto.statistico.TeamRatingResponse.prototype.setRatingsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.statistico.TeamRating=} opt_value
 * @param {number=} opt_index
 * @return {!proto.statistico.TeamRating}
 */
proto.statistico.TeamRatingResponse.prototype.addRatings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.statistico.TeamRating, opt_index);
};


proto.statistico.TeamRatingResponse.prototype.clearRatingsList = function() {
  this.setRatingsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statistico.TeamRating = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statistico.TeamRating, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statistico.TeamRating.displayName = 'proto.statistico.TeamRating';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statistico.TeamRating.prototype.toObject = function(opt_includeInstance) {
  return proto.statistico.TeamRating.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statistico.TeamRating} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.TeamRating.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fixtureId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    seasonId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    attack: (f = msg.getAttack()) && proto.statistico.Points.toObject(includeInstance, f),
    defence: (f = msg.getDefence()) && proto.statistico.Points.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statistico.TeamRating}
 */
proto.statistico.TeamRating.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statistico.TeamRating;
  return proto.statistico.TeamRating.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statistico.TeamRating} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statistico.TeamRating}
 */
proto.statistico.TeamRating.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTeamId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFixtureId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeasonId(value);
      break;
    case 4:
      var value = new proto.statistico.Points;
      reader.readMessage(value,proto.statistico.Points.deserializeBinaryFromReader);
      msg.setAttack(value);
      break;
    case 5:
      var value = new proto.statistico.Points;
      reader.readMessage(value,proto.statistico.Points.deserializeBinaryFromReader);
      msg.setDefence(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statistico.TeamRating.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statistico.TeamRating.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statistico.TeamRating} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.TeamRating.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getFixtureId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSeasonId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getAttack();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.statistico.Points.serializeBinaryToWriter
    );
  }
  f = message.getDefence();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.statistico.Points.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 team_id = 1;
 * @return {number}
 */
proto.statistico.TeamRating.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.statistico.TeamRating.prototype.setTeamId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 fixture_id = 2;
 * @return {number}
 */
proto.statistico.TeamRating.prototype.getFixtureId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.statistico.TeamRating.prototype.setFixtureId = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 season_id = 3;
 * @return {number}
 */
proto.statistico.TeamRating.prototype.getSeasonId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.statistico.TeamRating.prototype.setSeasonId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Points attack = 4;
 * @return {?proto.statistico.Points}
 */
proto.statistico.TeamRating.prototype.getAttack = function() {
  return /** @type{?proto.statistico.Points} */ (
    jspb.Message.getWrapperField(this, proto.statistico.Points, 4));
};


/** @param {?proto.statistico.Points|undefined} value */
proto.statistico.TeamRating.prototype.setAttack = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.statistico.TeamRating.prototype.clearAttack = function() {
  this.setAttack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.TeamRating.prototype.hasAttack = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Points defence = 5;
 * @return {?proto.statistico.Points}
 */
proto.statistico.TeamRating.prototype.getDefence = function() {
  return /** @type{?proto.statistico.Points} */ (
    jspb.Message.getWrapperField(this, proto.statistico.Points, 5));
};


/** @param {?proto.statistico.Points|undefined} value */
proto.statistico.TeamRating.prototype.setDefence = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.statistico.TeamRating.prototype.clearDefence = function() {
  this.setDefence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.TeamRating.prototype.hasDefence = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.statistico.TeamRating.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.statistico.TeamRating.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.statistico.TeamRating.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.statistico.TeamRating.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.statistico.Points = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.statistico.Points, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.statistico.Points.displayName = 'proto.statistico.Points';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.statistico.Points.prototype.toObject = function(opt_includeInstance) {
  return proto.statistico.Points.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.statistico.Points} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.Points.toObject = function(includeInstance, msg) {
  var f, obj = {
    points: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    difference: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.statistico.Points}
 */
proto.statistico.Points.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.statistico.Points;
  return proto.statistico.Points.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.statistico.Points} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.statistico.Points}
 */
proto.statistico.Points.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPoints(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDifference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.statistico.Points.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.statistico.Points.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.statistico.Points} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.statistico.Points.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoints();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getDifference();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float points = 1;
 * @return {number}
 */
proto.statistico.Points.prototype.getPoints = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.statistico.Points.prototype.setPoints = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float difference = 2;
 * @return {number}
 */
proto.statistico.Points.prototype.getDifference = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.statistico.Points.prototype.setDifference = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


goog.object.extend(exports, proto.statistico);
